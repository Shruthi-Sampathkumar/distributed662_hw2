// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: timeline.proto

#include "timeline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace timeline {
class userDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user>
      _instance;
} _user_default_instance_;
class postDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<post>
      _instance;
} _post_default_instance_;
class follow_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<follow_request>
      _instance;
} _follow_request_default_instance_;
class follow_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<follow_response>
      _instance;
} _follow_response_default_instance_;
class unfollow_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<unfollow_request>
      _instance;
} _unfollow_request_default_instance_;
class unfollow_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<unfollow_response>
      _instance;
} _unfollow_response_default_instance_;
class list_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_request>
      _instance;
} _list_request_default_instance_;
class list_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<list_response>
      _instance;
} _list_response_default_instance_;
}  // namespace timeline
namespace protobuf_timeline_2eproto {
void InitDefaultsuserImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::timeline::_user_default_instance_;
    new (ptr) ::timeline::user();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::user::InitAsDefaultInstance();
}

void InitDefaultsuser() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsuserImpl);
}

void InitDefaultspostImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::timeline::_post_default_instance_;
    new (ptr) ::timeline::post();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::post::InitAsDefaultInstance();
}

void InitDefaultspost() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultspostImpl);
}

void InitDefaultsfollow_requestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_timeline_2eproto::InitDefaultsuser();
  {
    void* ptr = &::timeline::_follow_request_default_instance_;
    new (ptr) ::timeline::follow_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::follow_request::InitAsDefaultInstance();
}

void InitDefaultsfollow_request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfollow_requestImpl);
}

void InitDefaultsfollow_responseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::timeline::_follow_response_default_instance_;
    new (ptr) ::timeline::follow_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::follow_response::InitAsDefaultInstance();
}

void InitDefaultsfollow_response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfollow_responseImpl);
}

void InitDefaultsunfollow_requestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_timeline_2eproto::InitDefaultsuser();
  {
    void* ptr = &::timeline::_unfollow_request_default_instance_;
    new (ptr) ::timeline::unfollow_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::unfollow_request::InitAsDefaultInstance();
}

void InitDefaultsunfollow_request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsunfollow_requestImpl);
}

void InitDefaultsunfollow_responseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::timeline::_unfollow_response_default_instance_;
    new (ptr) ::timeline::unfollow_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::unfollow_response::InitAsDefaultInstance();
}

void InitDefaultsunfollow_response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsunfollow_responseImpl);
}

void InitDefaultslist_requestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_timeline_2eproto::InitDefaultsuser();
  {
    void* ptr = &::timeline::_list_request_default_instance_;
    new (ptr) ::timeline::list_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::list_request::InitAsDefaultInstance();
}

void InitDefaultslist_request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslist_requestImpl);
}

void InitDefaultslist_responseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::timeline::_list_response_default_instance_;
    new (ptr) ::timeline::list_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeline::list_response::InitAsDefaultInstance();
}

void InitDefaultslist_response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslist_responseImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::user, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::post, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::post, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::post, owner_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::follow_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::follow_request, user1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::follow_request, user2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::follow_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::follow_response, success_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::unfollow_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::unfollow_request, user1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::unfollow_request, user2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::unfollow_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::unfollow_response, success_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::list_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::list_request, user1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::list_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::list_response, followers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::timeline::list_response, active_users_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::timeline::user)},
  { 6, -1, sizeof(::timeline::post)},
  { 13, -1, sizeof(::timeline::follow_request)},
  { 20, -1, sizeof(::timeline::follow_response)},
  { 26, -1, sizeof(::timeline::unfollow_request)},
  { 33, -1, sizeof(::timeline::unfollow_response)},
  { 39, -1, sizeof(::timeline::list_request)},
  { 45, -1, sizeof(::timeline::list_response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_post_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_follow_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_follow_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_unfollow_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_unfollow_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_list_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::timeline::_list_response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "timeline.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016timeline.proto\022\010timeline\"\024\n\004user\022\014\n\004us"
      "er\030\001 \001(\t\"&\n\004post\022\017\n\007content\030\001 \001(\t\022\r\n\005own"
      "er\030\002 \001(\t\"N\n\016follow_request\022\035\n\005user1\030\001 \001("
      "\0132\016.timeline.user\022\035\n\005user2\030\002 \001(\0132\016.timel"
      "ine.user\")\n\017follow_response\022\026\n\016success_s"
      "tatus\030\001 \001(\005\"P\n\020unfollow_request\022\035\n\005user1"
      "\030\001 \001(\0132\016.timeline.user\022\035\n\005user2\030\002 \001(\0132\016."
      "timeline.user\"+\n\021unfollow_response\022\026\n\016su"
      "ccess_status\030\001 \001(\005\"-\n\014list_request\022\035\n\005us"
      "er1\030\001 \001(\0132\016.timeline.user\"8\n\rlist_respon"
      "se\022\021\n\tfollowers\030\001 \001(\t\022\024\n\014active_users\030\002 "
      "\001(\t2\341\001\n\016social_network\022>\n\005addTo\022\030.timeli"
      "ne.follow_request\032\031.timeline.follow_resp"
      "onse\"\000\022G\n\nremoveFrom\022\032.timeline.unfollow"
      "_request\032\033.timeline.unfollow_response\"\000\022"
      "F\n\021getFollowersUsers\022\026.timeline.list_req"
      "uest\032\027.timeline.list_response\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 679);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "timeline.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_timeline_2eproto
namespace timeline {

// ===================================================================

void user::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user::user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultsuser();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.user)
}
user::user(const user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  // @@protoc_insertion_point(copy_constructor:timeline.user)
}

void user::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

user::~user() {
  // @@protoc_insertion_point(destructor:timeline.user)
  SharedDtor();
}

void user::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user& user::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultsuser();
  return *internal_default_instance();
}

user* user::New(::google::protobuf::Arena* arena) const {
  user* n = new user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "timeline.user.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.user)
  return false;
#undef DO_
}

void user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.user.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.user)
}

::google::protobuf::uint8* user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.user.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.user)
  return target;
}

size_t user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.user)
  GOOGLE_DCHECK_NE(&from, this);
  const user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.user)
    MergeFrom(*source);
  }
}

void user::MergeFrom(const user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
}

void user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user::CopyFrom(const user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user::IsInitialized() const {
  return true;
}

void user::Swap(user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user::InternalSwap(user* other) {
  using std::swap;
  user_.Swap(&other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void post::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int post::kContentFieldNumber;
const int post::kOwnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

post::post()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultspost();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.post)
}
post::post(const post& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  // @@protoc_insertion_point(copy_constructor:timeline.post)
}

void post::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

post::~post() {
  // @@protoc_insertion_point(destructor:timeline.post)
  SharedDtor();
}

void post::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void post::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* post::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const post& post::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultspost();
  return *internal_default_instance();
}

post* post::New(::google::protobuf::Arena* arena) const {
  post* n = new post;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void post::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool post::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.post)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "timeline.post.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), static_cast<int>(this->owner().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "timeline.post.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.post)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.post)
  return false;
#undef DO_
}

void post::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.post.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), static_cast<int>(this->owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.post.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->owner(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.post)
}

::google::protobuf::uint8* post::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.post.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), static_cast<int>(this->owner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.post.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->owner(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.post)
  return target;
}

size_t post::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.post)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string owner = 2;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void post::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.post)
  GOOGLE_DCHECK_NE(&from, this);
  const post* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const post>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.post)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.post)
    MergeFrom(*source);
  }
}

void post::MergeFrom(const post& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.post)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
}

void post::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void post::CopyFrom(const post& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool post::IsInitialized() const {
  return true;
}

void post::Swap(post* other) {
  if (other == this) return;
  InternalSwap(other);
}
void post::InternalSwap(post* other) {
  using std::swap;
  content_.Swap(&other->content_);
  owner_.Swap(&other->owner_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata post::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void follow_request::InitAsDefaultInstance() {
  ::timeline::_follow_request_default_instance_._instance.get_mutable()->user1_ = const_cast< ::timeline::user*>(
      ::timeline::user::internal_default_instance());
  ::timeline::_follow_request_default_instance_._instance.get_mutable()->user2_ = const_cast< ::timeline::user*>(
      ::timeline::user::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int follow_request::kUser1FieldNumber;
const int follow_request::kUser2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

follow_request::follow_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultsfollow_request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.follow_request)
}
follow_request::follow_request(const follow_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user1()) {
    user1_ = new ::timeline::user(*from.user1_);
  } else {
    user1_ = NULL;
  }
  if (from.has_user2()) {
    user2_ = new ::timeline::user(*from.user2_);
  } else {
    user2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:timeline.follow_request)
}

void follow_request::SharedCtor() {
  ::memset(&user1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user2_) -
      reinterpret_cast<char*>(&user1_)) + sizeof(user2_));
  _cached_size_ = 0;
}

follow_request::~follow_request() {
  // @@protoc_insertion_point(destructor:timeline.follow_request)
  SharedDtor();
}

void follow_request::SharedDtor() {
  if (this != internal_default_instance()) delete user1_;
  if (this != internal_default_instance()) delete user2_;
}

void follow_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* follow_request::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const follow_request& follow_request::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultsfollow_request();
  return *internal_default_instance();
}

follow_request* follow_request::New(::google::protobuf::Arena* arena) const {
  follow_request* n = new follow_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void follow_request::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.follow_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user1_ != NULL) {
    delete user1_;
  }
  user1_ = NULL;
  if (GetArenaNoVirtual() == NULL && user2_ != NULL) {
    delete user2_;
  }
  user2_ = NULL;
  _internal_metadata_.Clear();
}

bool follow_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.follow_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .timeline.user user1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .timeline.user user2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.follow_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.follow_request)
  return false;
#undef DO_
}

void follow_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.follow_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user1_, output);
  }

  // .timeline.user user2 = 2;
  if (this->has_user2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user2_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.follow_request)
}

::google::protobuf::uint8* follow_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.follow_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->user1_, deterministic, target);
  }

  // .timeline.user user2 = 2;
  if (this->has_user2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user2_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.follow_request)
  return target;
}

size_t follow_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.follow_request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user1_);
  }

  // .timeline.user user2 = 2;
  if (this->has_user2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void follow_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.follow_request)
  GOOGLE_DCHECK_NE(&from, this);
  const follow_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const follow_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.follow_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.follow_request)
    MergeFrom(*source);
  }
}

void follow_request::MergeFrom(const follow_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.follow_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user1()) {
    mutable_user1()->::timeline::user::MergeFrom(from.user1());
  }
  if (from.has_user2()) {
    mutable_user2()->::timeline::user::MergeFrom(from.user2());
  }
}

void follow_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.follow_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void follow_request::CopyFrom(const follow_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.follow_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool follow_request::IsInitialized() const {
  return true;
}

void follow_request::Swap(follow_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void follow_request::InternalSwap(follow_request* other) {
  using std::swap;
  swap(user1_, other->user1_);
  swap(user2_, other->user2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata follow_request::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void follow_response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int follow_response::kSuccessStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

follow_response::follow_response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultsfollow_response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.follow_response)
}
follow_response::follow_response(const follow_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_status_ = from.success_status_;
  // @@protoc_insertion_point(copy_constructor:timeline.follow_response)
}

void follow_response::SharedCtor() {
  success_status_ = 0;
  _cached_size_ = 0;
}

follow_response::~follow_response() {
  // @@protoc_insertion_point(destructor:timeline.follow_response)
  SharedDtor();
}

void follow_response::SharedDtor() {
}

void follow_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* follow_response::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const follow_response& follow_response::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultsfollow_response();
  return *internal_default_instance();
}

follow_response* follow_response::New(::google::protobuf::Arena* arena) const {
  follow_response* n = new follow_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void follow_response::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.follow_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_status_ = 0;
  _internal_metadata_.Clear();
}

bool follow_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.follow_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 success_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.follow_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.follow_response)
  return false;
#undef DO_
}

void follow_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.follow_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 success_status = 1;
  if (this->success_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->success_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.follow_response)
}

::google::protobuf::uint8* follow_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.follow_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 success_status = 1;
  if (this->success_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->success_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.follow_response)
  return target;
}

size_t follow_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.follow_response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 success_status = 1;
  if (this->success_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->success_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void follow_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.follow_response)
  GOOGLE_DCHECK_NE(&from, this);
  const follow_response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const follow_response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.follow_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.follow_response)
    MergeFrom(*source);
  }
}

void follow_response::MergeFrom(const follow_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.follow_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success_status() != 0) {
    set_success_status(from.success_status());
  }
}

void follow_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.follow_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void follow_response::CopyFrom(const follow_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.follow_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool follow_response::IsInitialized() const {
  return true;
}

void follow_response::Swap(follow_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void follow_response::InternalSwap(follow_response* other) {
  using std::swap;
  swap(success_status_, other->success_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata follow_response::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void unfollow_request::InitAsDefaultInstance() {
  ::timeline::_unfollow_request_default_instance_._instance.get_mutable()->user1_ = const_cast< ::timeline::user*>(
      ::timeline::user::internal_default_instance());
  ::timeline::_unfollow_request_default_instance_._instance.get_mutable()->user2_ = const_cast< ::timeline::user*>(
      ::timeline::user::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int unfollow_request::kUser1FieldNumber;
const int unfollow_request::kUser2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

unfollow_request::unfollow_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultsunfollow_request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.unfollow_request)
}
unfollow_request::unfollow_request(const unfollow_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user1()) {
    user1_ = new ::timeline::user(*from.user1_);
  } else {
    user1_ = NULL;
  }
  if (from.has_user2()) {
    user2_ = new ::timeline::user(*from.user2_);
  } else {
    user2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:timeline.unfollow_request)
}

void unfollow_request::SharedCtor() {
  ::memset(&user1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user2_) -
      reinterpret_cast<char*>(&user1_)) + sizeof(user2_));
  _cached_size_ = 0;
}

unfollow_request::~unfollow_request() {
  // @@protoc_insertion_point(destructor:timeline.unfollow_request)
  SharedDtor();
}

void unfollow_request::SharedDtor() {
  if (this != internal_default_instance()) delete user1_;
  if (this != internal_default_instance()) delete user2_;
}

void unfollow_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* unfollow_request::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const unfollow_request& unfollow_request::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultsunfollow_request();
  return *internal_default_instance();
}

unfollow_request* unfollow_request::New(::google::protobuf::Arena* arena) const {
  unfollow_request* n = new unfollow_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void unfollow_request::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.unfollow_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user1_ != NULL) {
    delete user1_;
  }
  user1_ = NULL;
  if (GetArenaNoVirtual() == NULL && user2_ != NULL) {
    delete user2_;
  }
  user2_ = NULL;
  _internal_metadata_.Clear();
}

bool unfollow_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.unfollow_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .timeline.user user1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .timeline.user user2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.unfollow_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.unfollow_request)
  return false;
#undef DO_
}

void unfollow_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.unfollow_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user1_, output);
  }

  // .timeline.user user2 = 2;
  if (this->has_user2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user2_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.unfollow_request)
}

::google::protobuf::uint8* unfollow_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.unfollow_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->user1_, deterministic, target);
  }

  // .timeline.user user2 = 2;
  if (this->has_user2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user2_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.unfollow_request)
  return target;
}

size_t unfollow_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.unfollow_request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user1_);
  }

  // .timeline.user user2 = 2;
  if (this->has_user2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void unfollow_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.unfollow_request)
  GOOGLE_DCHECK_NE(&from, this);
  const unfollow_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const unfollow_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.unfollow_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.unfollow_request)
    MergeFrom(*source);
  }
}

void unfollow_request::MergeFrom(const unfollow_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.unfollow_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user1()) {
    mutable_user1()->::timeline::user::MergeFrom(from.user1());
  }
  if (from.has_user2()) {
    mutable_user2()->::timeline::user::MergeFrom(from.user2());
  }
}

void unfollow_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.unfollow_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void unfollow_request::CopyFrom(const unfollow_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.unfollow_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool unfollow_request::IsInitialized() const {
  return true;
}

void unfollow_request::Swap(unfollow_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void unfollow_request::InternalSwap(unfollow_request* other) {
  using std::swap;
  swap(user1_, other->user1_);
  swap(user2_, other->user2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata unfollow_request::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void unfollow_response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int unfollow_response::kSuccessStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

unfollow_response::unfollow_response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultsunfollow_response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.unfollow_response)
}
unfollow_response::unfollow_response(const unfollow_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_status_ = from.success_status_;
  // @@protoc_insertion_point(copy_constructor:timeline.unfollow_response)
}

void unfollow_response::SharedCtor() {
  success_status_ = 0;
  _cached_size_ = 0;
}

unfollow_response::~unfollow_response() {
  // @@protoc_insertion_point(destructor:timeline.unfollow_response)
  SharedDtor();
}

void unfollow_response::SharedDtor() {
}

void unfollow_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* unfollow_response::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const unfollow_response& unfollow_response::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultsunfollow_response();
  return *internal_default_instance();
}

unfollow_response* unfollow_response::New(::google::protobuf::Arena* arena) const {
  unfollow_response* n = new unfollow_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void unfollow_response::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.unfollow_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_status_ = 0;
  _internal_metadata_.Clear();
}

bool unfollow_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.unfollow_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 success_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.unfollow_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.unfollow_response)
  return false;
#undef DO_
}

void unfollow_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.unfollow_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 success_status = 1;
  if (this->success_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->success_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.unfollow_response)
}

::google::protobuf::uint8* unfollow_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.unfollow_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 success_status = 1;
  if (this->success_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->success_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.unfollow_response)
  return target;
}

size_t unfollow_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.unfollow_response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 success_status = 1;
  if (this->success_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->success_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void unfollow_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.unfollow_response)
  GOOGLE_DCHECK_NE(&from, this);
  const unfollow_response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const unfollow_response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.unfollow_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.unfollow_response)
    MergeFrom(*source);
  }
}

void unfollow_response::MergeFrom(const unfollow_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.unfollow_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success_status() != 0) {
    set_success_status(from.success_status());
  }
}

void unfollow_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.unfollow_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void unfollow_response::CopyFrom(const unfollow_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.unfollow_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool unfollow_response::IsInitialized() const {
  return true;
}

void unfollow_response::Swap(unfollow_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void unfollow_response::InternalSwap(unfollow_response* other) {
  using std::swap;
  swap(success_status_, other->success_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata unfollow_response::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void list_request::InitAsDefaultInstance() {
  ::timeline::_list_request_default_instance_._instance.get_mutable()->user1_ = const_cast< ::timeline::user*>(
      ::timeline::user::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_request::kUser1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_request::list_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultslist_request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.list_request)
}
list_request::list_request(const list_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user1()) {
    user1_ = new ::timeline::user(*from.user1_);
  } else {
    user1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:timeline.list_request)
}

void list_request::SharedCtor() {
  user1_ = NULL;
  _cached_size_ = 0;
}

list_request::~list_request() {
  // @@protoc_insertion_point(destructor:timeline.list_request)
  SharedDtor();
}

void list_request::SharedDtor() {
  if (this != internal_default_instance()) delete user1_;
}

void list_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* list_request::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const list_request& list_request::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultslist_request();
  return *internal_default_instance();
}

list_request* list_request::New(::google::protobuf::Arena* arena) const {
  list_request* n = new list_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void list_request::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.list_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user1_ != NULL) {
    delete user1_;
  }
  user1_ = NULL;
  _internal_metadata_.Clear();
}

bool list_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.list_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .timeline.user user1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.list_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.list_request)
  return false;
#undef DO_
}

void list_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.list_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user1_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.list_request)
}

::google::protobuf::uint8* list_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.list_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->user1_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.list_request)
  return target;
}

size_t list_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.list_request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .timeline.user user1 = 1;
  if (this->has_user1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void list_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.list_request)
  GOOGLE_DCHECK_NE(&from, this);
  const list_request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const list_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.list_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.list_request)
    MergeFrom(*source);
  }
}

void list_request::MergeFrom(const list_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.list_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user1()) {
    mutable_user1()->::timeline::user::MergeFrom(from.user1());
  }
}

void list_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.list_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_request::CopyFrom(const list_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.list_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_request::IsInitialized() const {
  return true;
}

void list_request::Swap(list_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_request::InternalSwap(list_request* other) {
  using std::swap;
  swap(user1_, other->user1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata list_request::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void list_response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int list_response::kFollowersFieldNumber;
const int list_response::kActiveUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

list_response::list_response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_timeline_2eproto::InitDefaultslist_response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeline.list_response)
}
list_response::list_response(const list_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  followers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.followers().size() > 0) {
    followers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.followers_);
  }
  active_users_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.active_users().size() > 0) {
    active_users_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.active_users_);
  }
  // @@protoc_insertion_point(copy_constructor:timeline.list_response)
}

void list_response::SharedCtor() {
  followers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_users_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

list_response::~list_response() {
  // @@protoc_insertion_point(destructor:timeline.list_response)
  SharedDtor();
}

void list_response::SharedDtor() {
  followers_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_users_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void list_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* list_response::descriptor() {
  ::protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const list_response& list_response::default_instance() {
  ::protobuf_timeline_2eproto::InitDefaultslist_response();
  return *internal_default_instance();
}

list_response* list_response::New(::google::protobuf::Arena* arena) const {
  list_response* n = new list_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void list_response::Clear() {
// @@protoc_insertion_point(message_clear_start:timeline.list_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  followers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_users_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool list_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:timeline.list_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string followers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_followers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->followers().data(), static_cast<int>(this->followers().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "timeline.list_response.followers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string active_users = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_active_users()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->active_users().data(), static_cast<int>(this->active_users().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "timeline.list_response.active_users"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:timeline.list_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:timeline.list_response)
  return false;
#undef DO_
}

void list_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:timeline.list_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string followers = 1;
  if (this->followers().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followers().data(), static_cast<int>(this->followers().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.list_response.followers");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->followers(), output);
  }

  // string active_users = 2;
  if (this->active_users().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->active_users().data(), static_cast<int>(this->active_users().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.list_response.active_users");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->active_users(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:timeline.list_response)
}

::google::protobuf::uint8* list_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:timeline.list_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string followers = 1;
  if (this->followers().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followers().data(), static_cast<int>(this->followers().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.list_response.followers");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->followers(), target);
  }

  // string active_users = 2;
  if (this->active_users().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->active_users().data(), static_cast<int>(this->active_users().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "timeline.list_response.active_users");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->active_users(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeline.list_response)
  return target;
}

size_t list_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeline.list_response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string followers = 1;
  if (this->followers().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->followers());
  }

  // string active_users = 2;
  if (this->active_users().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->active_users());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void list_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeline.list_response)
  GOOGLE_DCHECK_NE(&from, this);
  const list_response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const list_response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeline.list_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeline.list_response)
    MergeFrom(*source);
  }
}

void list_response::MergeFrom(const list_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeline.list_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.followers().size() > 0) {

    followers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.followers_);
  }
  if (from.active_users().size() > 0) {

    active_users_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.active_users_);
  }
}

void list_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeline.list_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void list_response::CopyFrom(const list_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeline.list_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool list_response::IsInitialized() const {
  return true;
}

void list_response::Swap(list_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void list_response::InternalSwap(list_response* other) {
  using std::swap;
  followers_.Swap(&other->followers_);
  active_users_.Swap(&other->active_users_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata list_response::GetMetadata() const {
  protobuf_timeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_timeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace timeline

// @@protoc_insertion_point(global_scope)
